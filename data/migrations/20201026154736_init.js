
exports.up = function(knex) {
  return knex.schema
    .createTable("users", tbl => {
      tbl.increments("id")
        .primary()
        .notNullable()
      tbl.string("first_name")
        .notNullable()
      tbl.string("last_name")
        .notNullable()
      tbl.string("password")
        .notNullable()
      tbl.string("email")
        .notNullable()
        .unique()
        .index()
    })

    .createTable("topics", tbl => {
      tbl.increments("id")
        .primary()
        .notNullable()
      tbl.string("title")
        .notNullable()
        .index()
      tbl.string("frequency")
        .notNullable()
      tbl.string("join_code")
        .notNullable()
        .unique()
      tbl.integer("leader_id")
        .unsigned()
        .notNullable()
        .references("id")
        .inTable("users")
        .onUpdate("CASCADE")
        .onDelete("CASCADE")
      tbl.timestamps(true, true)
    })

    .createTable("topic_members", tbl => {
      tbl.increments("id")
        .primary()
        .notNullable()
      tbl.integer("topic_id")
        .unsigned()
        .notNullable()
        .references("id")
        .inTable("topics")
        .onUpdate("CASCADE")
        .onDelete("CASCADE")
      tbl.integer("user_id")
        .unsigned()
        .notNullable()
        .references("id")
        .inTable("users")
        .onUpdate("CASCADE")
        .onDelete("CASCADE")
    })

    .createTable("survey_requests", tbl => {
      tbl.increments("id")
        .primary()
        .notNullable()
      tbl.integer("topic_id")
        .unsigned()
        .notNullable()
        .references("id")
        .inTable("topics")
        .onUpdate("CASCADE")
        .onDelete("CASCADE")
      tbl.string("context")
        .defaultTo("Product Leadership")
      tbl.timestamps(true, true)
    })

    .createTable("questions", tbl => {
      tbl.increments("id")
        .primary()
        .notNullable()
      tbl.integer("survey_id")
        .unsigned()
        .notNullable()
        .references("id")
        .inTable("survey_requests")
        .onUpdate("CASCADE")
        .onDelete("CASCADE")
      tbl.string("type")
        .notNullable()
      tbl.string("style")
        .notNullable()
        .defaultTo("text")
      tbl.string("question")
        .notNullable()
    })

    .createTable("responses", tbl => {
      tbl.increments("id")
        .primary()
        .notNullable()
      tbl.integer("question_id")
        .unsigned()
        .notNullable()
        .references("id")
        .inTable("questions")
        .onUpdate("CASCADE")
        .onDelete("CASCADE")
      tbl.integer("user_id")
        .unsigned()
        .notNullable()
        .references("id")
        .inTable("users")
        .onUpdate("CASCADE")
        .onDelete("CASCADE")
      tbl.integer("survey_id")
        .unsigned()
        .notNullable()
        .references("id")
        .inTable("survey_requests")
        .onUpdate("CASCADE")
        .onDelete("CASCADE")
      tbl.string("response")
        .notNullable()
      tbl.timestamps(true, true)
    })

    .createTable("comments", tbl => {
      tbl.increments("id")
        .primary()
        .notNullable()
      tbl.integer("user_id")
        .unsigned()
        .notNullable()
        .references("id")
        .inTable("users")
        .onUpdate("CASCADE")
        .onDelete("CASCADE")
      tbl.integer("response_id")
        .unsigned()
        .notNullable()
        .references("id")
        .inTable("responses")
        .onUpdate("CASCADE")
        .onDelete("CASCADE")
      tbl.string("comment")
      tbl.timestamps(true, true)
    })
};

exports.down = function(knex) {
  return knex.schema
    .dropTableIfExists("users")
    .dropTableIfExists("topics")
    .dropTableIfExists("topic_members")
    .dropTableIfExists("survey_requests")
    .dropTableIfExists("questions")
    .dropTableIfExists("responses")
    .dropTableIfExists("comments")
};
